<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyx.dao.BugTicketDao">


    <!--保存缺陷追踪表-->
    <insert id="save" parameterType="com.lyx.entity.BugTicket">
        insert into t_bug_ticket(bug_id,team_id,title,description,status_code,status_name,bug_level)
        values(#{bugId},#{teamId},#{title},#{description},#{statusCode},#{statusName},#{bugLevel})
    </insert>

    <!--创建者创建缺陷追踪表-->
    <insert id="submitSave" parameterType="com.lyx.entity.BugTicket"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_bug_ticket(bug_id,team_id,title,description,status_name,bug_level,submit_id,submit_name,submit_time,check_id,check_name,designate_id,designate_name)
        values(#{bugId},#{teamId},#{title},#{description},#{statusName},#{bugLevel},#{submitId},#{submitName},#{submitTime},#{checkId},#{checkName},#{designateId},#{designateName})
    </insert>

    <!--查询所有缺陷追踪表-->
    <select id="findAll" resultType="com.lyx.entity.BugTicket">
        select bug_id,team_id,title,description,status_code,status_name,bug_level,submit_id,submit_name,submit_time,check_id,check_name,check_time,deal_id,deal_name,deal_time
        from t_bug_ticket
    </select>

    <!--根据id查找缺陷追踪表-->
    <select id="findById" parameterType="String" resultType="com.lyx.entity.BugTicket">
        select bug_id,team_id,title,description,status_code,status_name,bug_level,submit_id,submit_name,submit_time,check_id,check_name,check_time,deal_id,deal_name,deal_time
        from t_bug_ticket where bug_id = #{bugId}
    </select>

    <!--根据id删除缺陷追踪表-->
    <delete id="delete" parameterType="String">
        delete from t_bug_ticket where bug_id = #{bugId}
    </delete>

    <!--更新缺陷追踪表-->
    <update id="update" parameterType="com.lyx.entity.BugTicket">
        update t_bug_ticket set team_id=#{teamId},title=#{title},description=#{description},status_code=#{statusCode},status_name=#{statusName},bug_level=#{bugLevel}
        where bug_id = #{bugId}
    </update>

    <!--根据(题目，指派人，状态，小组id)条件查询缺陷追踪表-->
    <select id="findList" parameterType="com.lyx.dto.query.BugTicketQueryDto" resultType="com.lyx.entity.BugTicket">
        SELECT bug_id,team_id,title,description,status_code,status_name,bug_level,submit_id,submit_name,submit_time,check_id,check_name,check_time,deal_id,deal_name,deal_time,designate_id,designate_name
        FROM t_bug_ticket
        <where>
            <if test="bugId != null and bugId != ''">
                AND bug_id = #{bugId}
            </if>
            <if test="title != null and title != ''">
                AND title like CONCAT('%',#{title},'%')
            </if>
            <if test="designateName != null and designateName != ''">
                AND designate_name like CONCAT('%',#{designateName},'%')
            </if>
            <if test="statusName != null and statusName != ''">
                AND status_name = #{statusName}
            </if>
            <if test="teamId != null and teamId != ''">
                AND team_id = #{teamId}
            </if>
        </where>
--         ORDER BY  designate_id=#{empId} and status_name!="已解决" and status_name!="已驳回"
    </select>

    <!--查询所有缺陷追踪表，并将待处理排在前面-->
    <select id="findListByOrder" parameterType="String" resultType="com.lyx.entity.BugTicket">
        SELECT bug_id,team_id,title,description,status_code,status_name,bug_level,submit_id,submit_name,submit_time,check_id,check_name,check_time,deal_id,deal_name,deal_time,designate_id,designate_name
        FROM t_bug_ticket
        ORDER BY  designate_id=#{empId} and status_name!="已解决" and status_name!="已驳回" DESC
    </select>

    <!--更新指派后的缺陷追踪表-->
    <update id="updateCheckList" parameterType="com.lyx.entity.BugTicket">
        update t_bug_ticket set status_name=#{statusName},check_time=#{checkTime},deal_id=#{dealId},deal_name=#{dealName},designate_id=#{designateId},designate_name=#{designateName}
        where bug_id = #{bugId}
    </update>

    <!--更新修改后的缺陷追踪表-->
    <update id="updateDealList" parameterType="com.lyx.entity.BugTicket">
        update t_bug_ticket set status_name=#{statusName},deal_time=#{dealTime}
        where bug_id = #{bugId}
    </update>

    <!--更新驳回后的缺陷追踪表-->
    <update id="reject" parameterType="com.lyx.entity.BugTicket"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        update t_bug_ticket set status_name=#{statusName}
        where bug_id = #{bugId}
    </update>

    <!--获取待处理缺陷清单数量-->
    <select id="getDesignateCount" parameterType="String" resultType="Integer">
        select count(0)
        from t_bug_ticket
        where designate_id=#{empId} and status_name!="已解决" and status_name!="已驳回"
    </select>

    <!--获取状态图表的数据-->
    <select id="getStatusChart" parameterType="com.lyx.entity.BugTicket" resultType="com.lyx.dto.chart.StatusChartDto">
        select count(0) value,status_name name
        from t_bug_ticket
        where team_id=#{teamId}
        group by status_name
    </select>

    <!--获取员工图表的x轴数据-->
    <select id="getXAxisData" parameterType="com.lyx.entity.BugTicket" resultType="String">
        select designate_name
        from t_bug_ticket
        where team_id=#{teamId} and status_name="已解决"
        group by designate_id
    </select>

    <!--获取员工图表的y轴数据-->
    <select id="getYAxisData" parameterType="com.lyx.entity.BugTicket" resultType="String">
        select count(0)
        from t_bug_ticket
        where team_id=#{teamId} and status_name="已解决"
        group by designate_id
    </select>

    <select id="queryResolveNum" resultType="com.lyx.dto.chart.ResolveNumDto">
        select
               e.realname ,
               IFNULL(b.num,0) as countNum
        from (
                 SELECT DISTINCT realname, emp_id ,team_id
                 from t_employee
                 where team_id = #{teamId}) e
        left join (
            SELECT
                count(0) num, designate_id, designate_name ,team_id
            FROM
                t_bug_ticket
            WHERE
                team_id = #{teamId}
              and status_name = '已解决'
            GROUP BY
                designate_id , designate_name ,team_id) b
        on e.emp_id = b.designate_id
        and e.team_id = b.team_id
    </select>
</mapper>